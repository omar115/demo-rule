@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

title Rakizo Context Diagram

AddContainerTag("community", $sprite="application_server", $legendText="community")

Person(customer, "Customer", "Company that wants to build an application.")

System_Boundary(ui, "UI Interface") {
   Container(rakizo_libs, "rakizo-libs", "Java, Python", "All common JVM functionality used across the Rakizo services.", $tags="community")
   Container(platform_data_services, "platform-services", "YAML", "This repository is composed of multiple micro services that are in charge of sending data to the data lake.", $tags="community")
   Container(screen_community, "screen-community", "YAML", "This repository includes all services under the screen community.", $tags="community")
   Container(dashboard_community, "dashboard-community", "YAML", "Dashboard community will be needed for serving user dashboard services.", $tags="community")
   Container(architectural_decisions, "architectural-decisions", "YAML", "Architectural decisions records for Rakizo platform.", $tags="community")
   Container(rakizo_ui, "rakizo-ui", "Dart", "the UI for the RAKIZO Platform.", $tags="community")
   Container(security_community, "security-community", "Java, Python", "Security community is responsible for managing all kinds of authentication related services of the Rakizo platform.", $tags="community", $link="container.puml")
   Container(application_community, "application-community", "Java, Python", "This repository includes all services under the application community.", $tags="community")
   Container(flow_community, "flow-community", "Java, Python", "This repository includes all services under the flow community.", $tags="community")
   Container(rakizo_CICD, "rakizo-CICD", "Java, Python", "Stores user registration information, hashed auth credentials, access logs, etc.", $tags="community")
   Container(platform_data_services, "platform-data-services", "YAML", "This repository is composed of multiple micro services that are in charge of sending data to the data lake.", $tags="community")
   Container(dlq_processor, "dlq-processor", "YAML", "Repository that executes dlq reprocessing. It is composed of multiple micro-services that are in charge of sending data to the data lake and reporting warehouse.", $tags="community")
   Container(platform_community, "platform-community", "Java, Python", "This repository is composed of multiple micro-services at the platform level.", $tags="community")
}

Rel(customer, ui, "Uses")

SHOW_LEGEND()
@enduml